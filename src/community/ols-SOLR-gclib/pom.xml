<?xml version="1.0" encoding="ISO-8859-1"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.geoserver</groupId>
		<artifactId>community</artifactId>
		<version>2.6-SNAPSHOT</version>
	</parent>

	<groupId>org.geoserver</groupId>
	<artifactId>gs-ols-SOLR-gclib</artifactId>
	<packaging>jar</packaging>
	<name>Open Location Services SOLR geocoding library</name>

	<description>Library that implements address parsing for SOLR geocoding</description>
	<inceptionYear>2014</inceptionYear>
	<developers>
		<developer>
			<id>phoops</id>
			<name>phoops s.r.l.</name>
			<email>geoserver-ols@phoops.it</email>
			<organization>phoops s.r.l.</organization>
			<organizationUrl>http://www.phoops.it</organizationUrl>
		</developer>
	</developers>

	<dependencies>
		<dependency>
			<groupId>org.apache.solr</groupId>
			<artifactId>solr-solrj</artifactId>
			<version>4.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.geoserver</groupId>
			<artifactId>gs-main</artifactId>
			<classifier>tests</classifier>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.mockrunner</groupId>
			<artifactId>mockrunner</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymockclassextension</artifactId>
			<version>2.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>xmlunit</groupId>
			<artifactId>xmlunit</artifactId>
			<scope>test</scope>
		</dependency>
        <dependency>
            <groupId>net.sf.opencsv</groupId>
            <artifactId>opencsv</artifactId>
            <version>2.0</version>
            <scope>test</scope>
        </dependency>
	</dependencies>

	<build>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
			</testResource>
		</testResources>
  <plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<configuration>
					<instrumentation>
						<!-- ignores> <ignore>**/*Exception.class</ignore> </ignores -->
						<excludes>
							<exclude>**/*Exception.class</exclude>
						</excludes>
						<!-- includes> <include>**/*Test.class</include> </includes -->
					</instrumentation>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>jdk6</id>
			<build>
<!-- 			 <finalName>${artifactId}-${version}-${classifier}</finalName> -->
				<plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-jar</id>
                        <phase>install</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <classifier>jdk6</classifier>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
      					<!-- compilation -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<version>2.3.2</version>
						<configuration>
							<source>1.6</source>
							<target>1.6</target>
							<debug>true</debug>
							<encoding>UTF-8</encoding>
							<!-- On the win32 build box the compiler oom's due to the compiler 
								accumulating too many classes in the permanent generation, similar to GEOT-2462 -->
							<fork>${fork.javac}</fork>
							<maxmem>${javac.maxHeapSize}</maxmem>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
