<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (c) 2012 TOPP - www.openplans.org. All rights reserved. This 
	code is licensed under the GPL 2.0 license, available at the root application 
	directory. -->
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>

	<!-- The xstream and the legacy service loaders -->
	<bean id="legacyOlsLoader" class="it.phoops.geoserver.ols.OLSLoader" />
	<bean id="olsLoader" class="it.phoops.geoserver.ols.OLSXStreamLoader">
		<constructor-arg ref="resourceLoader" />
	</bean>
	
	<!-- ols configuration bean. This is a service level facade to the configuration system -->
    <bean id="ols" class="it.phoops.geoserver.ols.OLS">
      <constructor-arg ref="geoServer"/>
    </bean>
    
	<!-- this registers the above modules with the servlet context
		 it is around to keep the struts app happy as we move away from 
		 servlets  -->
<!-- 	<bean id="olsRegisterar"
		class="org.vfny.geoserver.global.GeoServerServletContextInitializer">
		
		<constructor-arg type="java.lang.String" value="OLS"/>
 		<constructor-arg ref="ols"/>
 	</bean> -->
	
	<bean id="geocodingHandler" class="it.phoops.geoserver.ols.geocoding.GeocodingHandler">
	</bean>

    <bean id="reverseGeocodingHandler" class="it.phoops.geoserver.ols.geocoding.ReverseGeocodingHandler">
    </bean>

    <bean id="routingHandler" class="it.phoops.geoserver.ols.routing.RoutingHandler">
    </bean>

    <bean id="olsDispatcher" class="it.phoops.geoserver.ols.OLSDispatcher">
		<!-- <constructor-arg ref="resourceLoader" /> -->
        <property name="handlers">
            <map>
                <entry key="/*[local-name() = 'GeocodeRequest' and namespace-uri()='http://www.opengis.net/xls']"><ref bean="geocodingHandler"/></entry>
                <entry key="/*[local-name() = 'ReverseGeocodeRequest' and namespace-uri()='http://www.opengis.net/xls']"><ref bean="reverseGeocodingHandler"/></entry>
                <entry key="/*[local-name() = 'DetermineRouteRequest' and namespace-uri()='http://www.opengis.net/xls']"><ref bean="routingHandler"/></entry>
<!--
                <entry key="/*[local-name() = 'GetPortrayMapCapabilitiesRequest' and namespace-uri()='http://www.opengis.net/xls']"><ref bean="portrayCapabilitiesHandler"/></entry>
                <entry key="/*[local-name() = 'PortrayMapRequest' and namespace-uri()='http://www.opengis.net/xls']"><ref bean="portrayHandler"/></entry>
-->
            </map>
        </property>
	</bean>
	
	<bean id="workspaceHandler" class="it.phoops.geoserver.ols.util.OLSWorkspaceHandler">
    </bean>

	<bean id="olsDispatcherWS" class="it.phoops.geoserver.ols.OLSDispacherWS">
        <property name="handlers">
            <map>
                <entry key="/*[local-name() = 'WorkspaceRequest' and namespace-uri()='http://www.opengis.net/xls']"><ref bean="workspaceHandler"/></entry>
            </map>
        </property>
	</bean>

	<bean id="olsDispatcherMapping"
		class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		<property name="alwaysUseFullPath" value="true" />
		<property name="mappings">
			<props>
				<prop key="/ols/**/ws">olsDispatcher</prop>
				<prop key="/ols">olsDispatcher</prop>
				<prop key="/workspace">olsDispatcherWS</prop>
			</props>
		</property>
	</bean>
	<!-- the abstract base bean -->
	<!-- <bean id="olsAbstractService" abstract="true" -->
	<!-- class="org.vfny.geoserver.servlets.AbstractService"> -->
	<!-- reference to geoserver bean defined in the 'main' context -->
	<!-- <property name="geoServer" ref="geoServer"/> -->
	<!-- <property name="catalog" ref="catalog"/> -->
	<!-- </bean> -->

	<bean id="olsFactoryExtension" class="it.phoops.geoserver.ols.OLSFactoryExtension" />

	<!-- http url mapping -->
	<!-- <bean id="wcsURLMapping" class="org.geoserver.ows.OWSHandlerMapping"> 
		<constructor-arg ref="catalog"/> <property name="alwaysUseFullPath" value="true"/> 
		<property name="mappings"> <props> <prop key="/ols">dispatcher</prop> <prop 
		key="/ols/**">dispatcher</prop> </props> </property> </bean> -->

	<!-- <bean id="olsLocalWorkspaceURLManger" class="org.geoserver.ows.LocalWorkspaceURLMangler"> 
		<constructor-arg value="ols"/> </bean> -->
	<!-- <bean id="cqlKvpParser" class="org.geoserver.ows.kvp.CQLFilterKvpParser"/> -->
	<!-- The coverage response delegates and their factory -->
	<!-- <bean id="coverageResponseDelegateFactory" class="org.geoserver.wcs.responses.CoverageResponseDelegateFinder"/> -->
	<!-- <bean id="ascCoverageResponseDelegate" class="org.geoserver.wcs.responses.AscCoverageResponseDelegate"/> -->
	<!-- <bean id="geotiffCoverageResponseDelegate" class="org.geoserver.wcs.responses.GeoTIFFCoverageResponseDelegate"/> -->
	<!-- <bean id="GTopo30CoverageResponseDelegate" class="org.geoserver.wcs.responses.GTopo30CoverageResponseDelegate"/> -->
	<!-- <bean id="imgCoverageResponseDelegate" class="org.geoserver.wcs.responses.IMGCoverageResponseDelegate"/> -->
	<!-- <bean id="debugCoverageResponseDelegate" class="org.geoserver.wcs.responses.DebugCoverageResponseDelegate"/> -->

	<!-- disposes of all coverages created during GetCoverage calls -->
	<!-- <bean id="coverageCleaner" class="org.geoserver.wcs.CoverageCleanerCallback"/> -->
</beans>